package com.qa.opencart.pages;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;

import com.qa.opencart.utils.ElementUtil;

public class ProductInfoPage {

	private WebDriver driver;
	private ElementUtil eleUtil;
	private By ProductImages = By.cssSelector("ul.thumbnails.img");
	private By ProductMetaData =By.cssSelector("div#content ul.list-unstled:nth-of-type(1)li");
	private By ProductPriceData =By.cssSelector("div#content ul.list-unstled:nth-of-type(2)li");
	private By qty = By.id("input-quantity");
	private By addToCartBtn = By.id("button-cart");
	
	private Map <String, String> productInfoMap;
	
	private By ProductHeader = By.xpath("//div[@id='content']//h1");
	
	public ProductInfoPage(WebDriver driver)
	{
		this.driver=driver;
		eleUtil = new ElementUtil(driver);
	}
	
	public String getProductHeader()
	{
		String header = eleUtil.doGetText(ProductHeader);
		System.out.println("product header is:" +header);
		return header;
	}
	
	public Map getProductInfo()
	{
		productInfoMap = new HashMap<String,String>();
		productInfoMap.put("name", getProductHeader());
		getProductMetadata();
		getProductPriceData();
		return productInfoMap;
	}

	private void getProductMetadata() {
List<WebElement> metaDatList = eleUtil.getElement(ProductMetaData);
for(WebElement e: metaDatList)
{
	String text = e.getText();
	String meta[] = text.split(":");
	String metaKey = meta[0].trim();
	String metaValue = meta[1].trim();
	
	productInfoMap.put(metaKey, metaValue);
}
	}

	private void getProductPriceData() {
List<WebElement> metaPriceList = eleUtil.getElement(ProductPriceData);
String price = metaPriceList.get(0).getText().trim();
String exPrice = metaPriceList.get(1).getText().trim();
productInfoMap.put("price", price);
productInfoMap.put("exTaxPrice", exPrice);
		
	}
	}














